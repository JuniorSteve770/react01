{"version":3,"sources":["COmponents/01Props+Components/FuncProps.js","COmponents/01Props+Components/ClassProps.js","COmponents/02States+Components/Counter.js","COmponents/03States++/ImageSlider.js","COmponents/04Forms/01MyForm.js","COmponents/04Forms/02Form_tag.js","COmponents/04Forms/03Form_tags.js","COmponents/04Forms/04FormValidation.js","COmponents/05Api/01FetchApi.js","COmponents/05Api/02FetchApi.js","App.js","serviceWorker.js","index.js"],"names":["FuncProps","props","title","myInt","myFunc","myArray","myObject","a","FuncProps2","Useprops","this","Component","Counter","handleIncrement","setState","count","state","handleDecrement","onClick","SlideImages","images","Index","visible","NextImage","PrevImage","HideImg","buttonText","style","width","height","src","alt","Myform","name","rememBerMe","FormChanged","event","target","value","handleChek","rememberMe","checked","hanDleSelect","FormSubmit","console","log","type","onChange","FormTags","name2","genDer","HandleChanges","fieldName","Ischeckbox","formSubmit","e","preventDefault","onSubmit","FormTag2","initialState","surname","password","email","componentName","validate","nameError","surnameError","passwordError","emailError","includes","placeholder","fontSize","color","class","FetchApi","loading","person","fetch","response","json","data","results","className","first","last","cell","location","country","picture","large","medium","thumbnail","AdvancedFech","length","map","people","index","key","cityl","Header","App","add","b","ClassProps","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.409cbccf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function FuncProps(props) {\r\n    return (\r\n        <div>\r\n        <h1>Here!!! we see things Different</h1>\r\n          <div>  Title {props.title}</div>\r\n          <div> And int  {props.myInt}</div>\r\n          <div>A function {props.myFunc(4,8)}</div>\r\n          <div> And Array of Data {props.myArray[3]}</div>\r\n          <div> And Object {props.myObject.a}</div>  \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n export const FuncProps2 =(props)=> {\r\n    return (\r\n        <div>\r\n          <h1>Here!!! we see things Different</h1>\r\n          <div>  Title is a second sricpt from same component</div>\r\n          <div> And int is a second sricpt from same component </div>\r\n          <div>A function is a second sricpt from same component </div>\r\n          <div> And Array of Data is a second sricpt from same component </div>\r\n          <div> And Object is a second sricpt from same component </div>  \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React,{Component} from 'react'\r\n\r\nclass Useprops extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            hello world fom Another Continent we Have!!. \r\n            <h1>{this.props.title} Among Best Continennts</h1>  \r\n            <div>i am and int {this.props.myInt}</div>  \r\n         <div>i am and Array of position {this.props.myArray[2]}</div> \r\n         <div>i am and Object {this.props.myObject.a}</div> \r\n         <div>i am a Function {this.props.myFunc(4,6)}</div>   \r\n\r\n        </div>\r\n      )  \r\n    }\r\n  }export default Useprops;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Counter extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            count: 0\r\n        };\r\n    }\r\n\r\n    handleIncrement=()=>{\r\n       this.setState({\r\n        count:this.state.count +1\r\n\r\n       }) \r\n        // console.log(\"button have been cliked\");\r\n    };\r\n\r\n    handleDecrement=()=>{\r\n        this.setState({\r\n         count:this.state.count -1\r\n \r\n        }) \r\n         // console.log(\"button have been cliked\");\r\n     };\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n        <h3>here is a Counter that both Increment and Decrement</h3>\r\n            <div>Count:{this.state.count} </div>\r\n            <button onClick = {this.handleDecrement}>Decrement</button>\r\n            <button onClick = {this.handleIncrement}>Increment</button>\r\n            <br/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SlideImages extends Component {\r\n    \r\n        state={\r\n\r\n            images: [\r\n                \"https://www.gettyimages.fr/gi-resources/images/500px/983794168.jpg\",\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR9J0grWUOxCg1YMsKq7ildPLsBHVPiODBjtQ&usqp=CAU\",\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQkERtGIa0EV08ECFNn_Gzv9QaW4to-lU-AYA&usqp=CAU\",\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwzUzEZksd0ziSj40Ly_mnEOtichB36iSPng&usqp=CAU\",\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQqEawppcajgogI_MffHsfqoWBidTQ4jmOBeQ&usqp=CAU\",\r\n            ],\r\n                // Here we create and Index that will help Us track The Image\r\n            Index:1,\r\n\r\n            visible:true,\r\n\r\n\r\n        };\r\n\r\n        // Here i create the Function that will increment Index \r\n            // and make me moove from and Image to another \r\n\r\n        NextImage = () => {\r\n            this.setState({\r\n                Index : this.state.Index +1\r\n            });\r\n        };\r\n\r\n        // Here i create the Function that will Decrement Index \r\n            // and make me moove from and Image to another \r\n\r\n        PrevImage = ()=>{\r\n            this.setState({\r\n                Index:this.state.Index -1\r\n\r\n            });\r\n        };\r\n\r\n        // Herev is the Function we use to show/Hide Images\r\n        // and rerender the State \r\n        HideImg =()=>{\r\n            this.setState({visible:!this.state.visible});\r\n        };\r\n\r\n\r\n        render() {\r\n            // here we condition the message on the button \r\n            // according to the State(hiden or Not) of the Button\r\n            const buttonText = this.state.visible? 'Hide': 'Show'\r\n        return (\r\n            <div>\r\n            <br/>\r\n            <h3>here is Image Slider</h3>\r\n            { this.state.visible? \r\n                    <img \r\n                        style ={{width:400, height:250}}\r\n                        src={this.state.images[this.state.Index]} \r\n                        alt=\"no beauty for the Moment\"\r\n                    />:\r\n                    \r\n                    <div>The Beauty Have Been hiden</div> }\r\n            <br/><br/>\r\n            <button onClick={this.PrevImage}>Prev</button>\r\n            <button onClick={this.NextImage}>Next</button>  \r\n            <br/>\r\n            <button onClick={this.HideImg}>{buttonText}</button>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Myform extends Component {\r\n    state={\r\n        name:\" Percys \",\r\n        rememBerMe:false,\r\n        title:'Miss',\r\n    };\r\n    // here is the function that's called when form is triggered\r\n    FormChanged = event=> {\r\n        this.setState({name:event.target.value})\r\n    };\r\n    //here is the function that listen to the checkBox\r\n    handleChek = event => {\r\n        this.setState({\r\n            rememberMe:event.target.checked\r\n        })\r\n    };\r\n    //here is the function that listen to the Select\r\n    hanDleSelect = event =>{\r\n        this.setState({\r\n            title:event.target.value\r\n         });\r\n    };\r\n    //here is where we Submit our Form\r\n    FormSubmit = ()=>{\r\n        console.log(this.state)\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n            <h2>Here is a Basic Form....Provide Us with your credentials...</h2>\r\n            <form>\r\n                <input \r\n                    style ={{width:500}}\r\n                    type='text' \r\n                    value={this.state.name}//here, we print a default name\r\n                    onChange={this.FormChanged}//here we collect and display new Name entered by the User\r\n                />\r\n                <br/>\r\n                <input type=\"checkbox\"\r\n                       checked={this.state.rememberMe}\r\n                       onChange={this.handleChek}//here we collect and display new Name entered by the User\r\n                />\r\n                \r\n                <input \r\n                 style ={{width:500}}\r\n                    type='text' \r\n                    value={this.state.name}//here, we print a default name\r\n                    onChange={this.FormChanged}//here we collect and display new Name entered by the User\r\n                />\r\n                <div>\r\n                    <select value = {this.state.title}\r\n                            onChange = {this.hanDleSelect}\r\n                    >\r\n                    <option>Mr.</option>\r\n                    <option>Ms.</option>\r\n                    <option>Miss</option>\r\n                    <option>Any</option>\r\n                    </select> \r\n                </div>                \r\n            </form>\r\n            <br/>\r\n            <button onClick={this.FormSubmit}>Submit</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class FormTags extends Component {\r\n    state = {\r\n        name:\"ben\",  \r\n        name2:\"\",      \r\n        rememBerMe:false,       \r\n        genDer:\"Miss\",\r\n\r\n    };\r\n    //Here we create All the functions that will be called by buttons, ones triggered\r\n\r\n    HandleChanges = (event, fieldName, Ischeckbox) =>{//this function takes and event and two parameters(fields ou inputs)\r\n        //from the inputs above, the state will be updated depending on the trigged parameter(checbox or form input fields) \r\n        this.setState({[fieldName] : Ischeckbox? event.target.checked : event.target.value});\r\n\r\n    }; \r\n    //here is the function for form submition\r\n    formSubmit = (e)=>{\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                    <h2>Here is and Advanced form, Using a single Function to Handle All Users Activities...</h2>\r\n            \r\n            <form  onSubmit = {this.formSubmit}  >\r\n                <input  \r\n                    value={this.state.name}//here we read the Default value of the variable inside state\r\n                    onChange={event=>this.HandleChanges(event, \"name\")}//here we create and event and parameter(name) each time input is triggered\r\n                    style ={{width:500}}\r\n                />\r\n                <br/>\r\n                <input  \r\n                    value={this.state.name2}//here we read the Default value of the variable inside state\r\n                    onChange={event=>this.HandleChanges(event, \"name2\")}//here we create and event and parameter(name2) each time input is triggered\r\n                    style ={{width:500}}\r\n                />\r\n                <br/>\r\n                <input type=\"checkbox\"\r\n                    checked={this.state.rememBerMe}\r\n                    onChange={event => this.HandleChanges(event, \"rememBerMe\", true)}\r\n                    style ={{width:500}}\r\n                />\r\n                <br/>\r\n                <select value={this.state.genDer}\r\n                        onChange={(event)=>this.HandleChanges(event, \"genDer\")}\r\n                >\r\n                    <option>M.</option>\r\n                    <option>Miss.</option>\r\n                    <option>Sir</option>\r\n                    <option>Mme.</option>\r\n                </select>\r\n                <br/>\r\n\r\n                <button type=\"submit\">SuBmit</button>\r\n            </form>\r\n\r\n\r\n\r\n\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class FormTag2 extends Component {\r\n    // Here we place and additional feature that ameliorate our functions \r\n\r\n    state = {\r\n        name:\"ben\",  \r\n        name2:\"\",      \r\n        rememBerMe:false,       \r\n        genDer:\"Miss\",\r\n\r\n    };\r\n    //Here we create All the functions that will be called by buttons, ones triggered\r\n    //we just pass fieldnames like Props(input parameters)\r\n\r\n    HandleChanges = event =>{//this function takes in all events and determine what5 t5o do according to event name/type\r\n        //from the inputs above, the state will be updated depending on the trigged parameter(checbox or form input fields) \r\n        const  Ischeckbox = event.target.type ===\"checkbox\";\r\n        this.setState({[event.target.name] : Ischeckbox? event.target.checked : event.target.value});\r\n\r\n    }; \r\n    //here is the funtion for form submission\r\n    formSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                    <h2>Here is a and Advanced form, Using a single Function to Handle All Users Activities...</h2>\r\n             \r\n            <form  onSubmit = {this.formSubmit}>\r\n                <input  \r\n                    name = \"name\"\r\n                    value={this.state.name}//here we read the Default value of the variable inside state\r\n                    onChange={this.HandleChanges}//here we create and event and parameter(name) each time input is triggered\r\n                />\r\n                <br/>\r\n                <input  \r\n                    name = \"name2\"\r\n                    value={this.state.name2}//here we read the Default value of the variable inside state\r\n                    onChange={this.HandleChanges}//here we create and event and parameter(name2) each time input is triggered\r\n                />\r\n                <br/>\r\n                <input\r\n                    name = \"rememBerMe\"\r\n                    type = \"checkbox\"\r\n                    checked = {this.state.rememBerMe}\r\n                    onChange = {this.HandleChanges}\r\n                />\r\n                <br/>\r\n                <select \r\n                        name = \"genDer\"\r\n                        value={this.state.genDer}\r\n                        onChange={this.HandleChanges}\r\n                >\r\n                    <option>M.</option>\r\n                    <option>Miss.</option>\r\n                    <option>Sir</option>\r\n                    <option>Mme.</option>\r\n                </select>\r\n                <br/>\r\n\r\n                <button type=\"submit\">SuBmit</button>\r\n            </form>\r\n            \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nconst initialState = {\r\n    name:\"\",  \r\n    surname:\"\",\r\n    password:\"\",     \r\n    email:\"\",  \r\n    genDer:\"Miss\",                \r\n    \r\n};\r\n\r\nexport default class componentName extends Component {\r\n    state = initialState  ;\r\n\r\n    //Here we create All the functions that will be called by buttons, ones triggered\r\n    //we just pass fieldnames like Props(input parameters)\r\n\r\n    HandleChanges = event =>{//this function takes in all events and determine what5 t5o do according to event name/type\r\n        //from the inputs above, the state will be updated depending on the trigged parameter(checbox or form input fields) \r\n        const  Ischeckbox = event.target.type ===\"checkbox\";\r\n        this.setState({[event.target.name] : Ischeckbox? event.target.checked : event.target.value});\r\n\r\n    }; \r\n    //here is functin that define and check if a form is valid or not\r\n    validate = ()=>{\r\n\r\n         //Here below, we insert Error Variables and define Data \r\n\r\n        let nameError = \"\";\r\n        let surnameError = \"\";\r\n        let passwordError = \"\";\r\n        let emailError = \"\";\r\n       \r\n\r\n        //here are condition on form's each field\r\n        \r\n        if(!this.state.name){\r\n            nameError = \"name cannot be blank\";\r\n        }\r\n        if(!this.state.surname){\r\n            surnameError = \"Surname cannot be blank\";\r\n        }\r\n        if(!this.state.password ){\r\n            passwordError = \"Password is empty, type data\";\r\n        }\r\n\r\n        if(!this.state.email.includes(\"@\")){\r\n            emailError =\"invalid email, check well the fiels\";\r\n        }\r\n\r\n        if(nameError|| surnameError|| passwordError||emailError ){\r\n            this.setState({emailError, nameError, surnameError, passwordError})\r\n            return false;\r\n        };\r\n        return true\r\n\r\n    }\r\n    //here is the funtion for form submission\r\n    formSubmit = (e) => {\r\n        e.preventDefault();        \r\n        const isValid = this.validate(); //here we validate Data or not\r\n        if(isValid) {\r\n            console.log(this.state);\r\n\r\n            //here we clear the form after loading Data\r\n            this.setState(initialState);\r\n        }\r\n        \r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                    <h2>Here is and Optimised form, Using a single Function to Handle All Users Activities...</h2>\r\n             \r\n            <form  onSubmit = {this.formSubmit}>\r\n                <input  \r\n                    placeholder = \"please enter your Name\"\r\n                    name = \"name\"                    \r\n                    value={this.state.name}//here we read the Default value of the variable inside state\r\n                    onChange={this.HandleChanges}//here we create and event and parameter(name) each time input is triggered\r\n                />\r\n             \r\n                    <div style={{ fontSize:10 , color:\"red\"}}>\r\n                        {this.state.nameError}\r\n                    </div>\r\n                \r\n                <br/>\r\n                <input  \r\n                    placeholder = \"please enter your Surname\"\r\n                    name = \"surname\"\r\n                    value={this.state.surname}//here we read the Default value of the variable inside state\r\n                    onChange={this.HandleChanges}//here we create and event and parameter(name2) each time input is triggered\r\n                />\r\n                    <div style={{ fontSize:10 , color:\"red\"}}>\r\n                        {this.state.surnameError}\r\n                    </div>                \r\n                <br/>\r\n                <input  \r\n                    placeholder = \"please enter your email\"\r\n                    name = \"email\"\r\n                    // type = \"email\"\r\n                    value={this.state.email}//here we read the Default value of the variable inside state\r\n                    onChange={this.HandleChanges}//here we create and event and parameter(name2) each time input is triggered\r\n                />\r\n                <div style={{ fontSize:10 , color:\"red\"}}>\r\n                        {this.state.emailError}\r\n                    </div>                \r\n                <br/>\r\n                <input\r\n                placeholder = \"password\"\r\n                    name = \"password\"\r\n                    type = \"password\"\r\n                    checked = {this.state.password}\r\n                    onChange = {this.HandleChanges}\r\n                />\r\n                <div style={{ fontSize:10 , color:\"red\"}}>\r\n                        {this.state.passwordError}\r\n                    </div>                \r\n                <br/>\r\n                <select \r\n                        name = \"genDer\"\r\n                        value={this.state.genDer}\r\n                        onChange={this.HandleChanges}\r\n                >\r\n                    <option>M.</option>\r\n                    <option>Miss.</option>\r\n                    <option>Sir</option>\r\n                    <option>Mme.</option>\r\n                </select>\r\n                <br/><br/>\r\n\r\n                \r\n\r\n                <button  type=\"submit\">Submit\r\n                    <i class=\"material-icons right\">send</i>\r\n                </button>\r\n                    \r\n            </form>\r\n       \r\n            \r\n            </div>\r\n            \r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class FetchApi extends Component {\r\n\r\n    \r\n    //api.randomuser.me\r\n    // Here we fech data from API and return the data on our page\r\n\r\n        state = {\r\n            loading : true,\r\n            person: null, //person represent d state variable(array) used to access in the API on line 18 below\r\n        }\r\n        \r\n        async componentDidMount(){//the async is due to the fech request two line below\r\n            const url =\"https://api.randomuser.me/\";//here we call the url from wich we will collect Data\r\n            const response = await fetch(url);//here we use fech to issue request and have acces to data\r\n            const data = await response.json();//await permit to make the fech request synchronus(request first and answer later) and ret5urn json\r\n           this.setState({person:data.results[0], loading:false})//result is the array contained in the API from witch we extract data. we also set loading to false\r\n    //console.log(data);\r\n\r\n        }\r\n\r\n    render() {       \r\n        return (\r\n            <div>\r\n                <h2>Here we dill with API... Using fetch funtion</h2>\r\n                <br/>  \r\n        {/* the line above permit us to print message according loading or if person variable is empty */}\r\n        {/* since the Variable person is not empty, and loading is set to false, here we load the Contain of array person that handle data from result  */}\r\n                {this.state.loading || !this.state.person ? \r\n                    (\r\n                        <div> loading...or Network issue</div>  \r\n                    ):\r\n                    ( <div className=\"image\">\r\n\r\n                        <div><strong>Title: </strong>{this.state.person.name.title}</div>\r\n                        <div><strong>Name: </strong>{this.state.person.name.first}</div>\r\n                        <div><strong>SurName: </strong>{this.state.person.name.last}</div>\r\n                        <div><strong>Cell: </strong>{this.state.person.cell}</div>\r\n                        <div><strong>e-Mail: </strong>{this.state.person.email}</div>\r\n                        <div><strong>Country: </strong>{this.state.person.location.country}</div>\r\n                        <div><strong>State: </strong>{this.state.person.location.state}</div>\r\n                        <br/>\r\n                        <img src={this.state.person.picture.large} alt='no contain to display'/>\r\n                        <img src={this.state.person.picture.medium }  alt='no contain to display'/>\r\n                        <img src={this.state.person.picture.thumbnail}  alt='no contain to display'/>\r\n                      </div>\r\n                    )\r\n                }\r\n        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n  ","import React, { Component } from 'react';\r\nimport './02.css'\r\n\r\nexport default class AdvancedFech  extends Component {\r\n\r\n    \r\n    //api.randomuser.me\r\n    // Here we fech data from API and return the data on our page\r\n\r\n        state = {\r\n            loading : true,\r\n            person: [], //person represent d state variable(array) used to access in the API on line 18 below\r\n        }\r\n        \r\n        async componentDidMount(){//the async is due to the fech request two line below\r\n            const url =\"https://api.randomuser.me/?results=4\";//here we call the url from wich we will collect Data\r\n            const response = await fetch(url);//here we use fech to issue request and have acces to data\r\n            const data = await response.json();//await permit to make the fech request synchronus(request first and answer later) and ret5urn json\r\n           this.setState({person:data.results , loading:false})//result is the array contained in the API from witch we extract data. we also set loading to false\r\n    console.log(data);\r\n\r\n        }\r\n\r\n    render() { \r\n\r\n                    // {/* the line above permit us to print message according loading or if person variable is empty */}\r\n             if(this.state.loading)  { \r\n                 return<div>Loading... It may be a Network issue...</div>\r\n             };\r\n\r\n    // {/* since the Variable person is not empty, and loading is set to false, here we load the Contain of array person that handle data from result  */}\r\n             if(!this.state.person.length){\r\n                return <div>didn't get a person to return</div>\r\n             };\r\n        \r\n        return (\r\n            <div>\r\n                <h2>API... for (3) person</h2>\r\n                <br/>  \r\n   \r\n               <div className=\"header\">\r\n                    {/* here we insert the sythax that will help us display for 5 people */}\r\n                    {/* map keyword permit us to person by person to fetch and display data */}\r\n                    \r\n                    {this.state.person.map((people, index)=>(\r\n                        \r\n                        <div key ={`people.login.uuid-${index}`} className=\"body\">\r\n\r\n                        \r\n\r\n                            <div><strong>Title:</strong>{people.name.title}</div>\r\n                            <div><strong>Name:</strong>{people.name.first}</div>\r\n                            <div><strong>SurName:</strong>{people.name.last}</div>\r\n                            <div><strong>Cell:</strong>{people.cell}</div>\r\n                            <div><strong>City:</strong>{people.cityl}</div>\r\n                            <div><strong>Country:</strong>{people.location.country}</div>\r\n                            <div><strong>State:</strong>{people.location.state}</div>\r\n                            <br/>\r\n                            <img src={people.picture.large} alt='no contain to display'/>\r\n                            <img src={people.picture.medium} alt='no contain to display'/>\r\n                            <img src={people.picture.thumbnail} alt='no contain to display'/>\r\n                            <br/><br/><br/>\r\n                        </div>\r\n                        \r\n                    ))}\r\n                \r\n                </div>\r\n                   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n  ","import React ,{ Component }from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n//import Landing from './COmponents/Landing';\nimport FunctProps,{FuncProps2} from './COmponents/01Props+Components/FuncProps';\nimport ClassProps from './COmponents/01Props+Components/ClassProps';\nimport Counter from './COmponents/02States+Components/Counter';\n// import ImageSlide from './COmponents/03States++/ImageSlider';\nimport SlideImages from './COmponents/03States++/ImageSlider';\nimport Myform from './COmponents/04Forms/01MyForm';\nimport Formtag from './COmponents/04Forms/02Form_tag';\nimport AdvcedFormtag from './COmponents/04Forms/03Form_tags';\nimport SecondAdvcedFormtag from './COmponents/04Forms/04FormValidation';\nimport FetchApi from './COmponents/05Api/01FetchApi';\nimport AdvancedFetch from './COmponents/05Api/02FetchApi';\n//import Login from './COmponents/00Firebase/Login';\n\n\n\n//  here is the class Componnent\n class Header extends Component {\n   render() {\n     \n     return (\n       <div>\n         hello world !!. we have two Continent to Explore\n         <h1>i am Intitulated {this.props.title}</h1>   \n         <div>i am and int {this.props.myInt}</div>  \n         <div>i am and Array of position {this.props.myArray[2]}</div> \n         <div>i am and Object {this.props.myObject.a}</div>  \n         <div>i am a Function {this.props.myFunc(5,7)}</div>     \n       </div>\n     )  \n   }\n }\n//  End of the Class Component\n\n// Here is the Main Component\nfunction App() {\n  const add = (a, b) =>  a+b;\n  return (\n    <div className=\"App\">\n    <br/>\n   {/* // <Login/> */}\n\n    <br/>\n    <Header title={\"Continent Africa\"} \n        myInt = {4} \n        myFunc = {add} \n        myArray = {[1, 2, 3, 4]}\n        myObject = {{ a:5, b:6}}\n    />\n\n    <ClassProps \n            title=\"lion from Europe\"\n            myInt = {5} \n            myFunc = {add} \n            myArray = {[1, 4, 6, 9]}\n            myObject = {{ a:7, b:9}}\n    />\n\n    <FunctProps title=\"Welcome to the Functionnal Component..\"\n            myInt = {5} \n            myFunc = {add} \n            myArray = {[1, 4, 6, 9]}\n            myObject = {{ a:7, b:9}}\n    />\n   \n   {/*  Here i'm printing a second sricpt from same component */}\n      <FuncProps2/>\n      <br/>\n      <Counter/>\n      <br/>\n      <SlideImages/>\n      <br/>\n      <Myform/>\n      <br/>\n      <Formtag/>\n      <br/>\n      <AdvcedFormtag/>\n      <br/>\n      <SecondAdvcedFormtag/>\n      <br/>\n      <FetchApi/>\n      <br/>\n      <AdvancedFetch/>\n\n    </div> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}